// Transcrypt'ed from Python, 2020-03-09 12:11:02
var sys = {};
import {AssertionError, AttributeError, BaseException, DeprecationWarning, Exception, IndexError, IterableError, KeyError, NotImplementedError, RuntimeWarning, StopIteration, UserWarning, ValueError, Warning, __JsIterator__, __PyIterator__, __Terminal__, __add__, __and__, __call__, __class__, __envir__, __eq__, __floordiv__, __ge__, __get__, __getcm__, __getitem__, __getslice__, __getsm__, __gt__, __i__, __iadd__, __iand__, __idiv__, __ijsmod__, __ilshift__, __imatmul__, __imod__, __imul__, __in__, __init__, __ior__, __ipow__, __irshift__, __isub__, __ixor__, __jsUsePyNext__, __jsmod__, __k__, __kwargtrans__, __le__, __lshift__, __lt__, __matmul__, __mergefields__, __mergekwargtrans__, __mod__, __mul__, __ne__, __neg__, __nest__, __or__, __pow__, __pragma__, __proxy__, __pyUseJsNext__, __rshift__, __setitem__, __setproperty__, __setslice__, __sort__, __specialattrib__, __sub__, __super__, __t__, __terminal__, __truediv__, __withblock__, __xor__, abs, all, any, assert, bool, bytearray, bytes, callable, chr, copy, deepcopy, delattr, dict, dir, divmod, enumerate, filter, float, getattr, hasattr, input, int, isinstance, issubclass, len, list, map, max, min, object, ord, pow, print, property, py_TypeError, py_iter, py_metatype, py_next, py_reversed, py_typeof, range, repr, round, set, setattr, sorted, str, sum, tuple, zip} from './org.transcrypt.__runtime__.js';
import {descriptor_pb2} from './google.protobuf.js';
import * as _symbol_database from './google.protobuf.symbol_database.js';
import * as _reflection from './google.protobuf.reflection.js';
import * as _message from './google.protobuf.message.js';
import * as _descriptor from './google.protobuf.descriptor.js';
import * as enum_type_wrapper from './google.protobuf.internal.enum_type_wrapper.js';
import * as __module_sys__ from './sys.js';
__nest__ (sys, '', __module_sys__);
var __name__ = 's2clientprotocol.common_pb2';
export var _b = sys.version_info [0] < 3 && (function __lambda__ (x) {
	return x;
}) || (function __lambda__ (x) {
	return x.encode ('latin1');
});
export var _sym_db = _symbol_database.Default ();
export var DESCRIPTOR = _descriptor.FileDescriptor (__kwargtrans__ ({py_name: 's2clientprotocol/common.proto', package: 'SC2APIProtocol', syntax: 'proto2', serialized_pb: _b ('\n\x1ds2clientprotocol/common.proto\x12\x0eSC2APIProtocol">\n\x10AvailableAbility\x12\x12\n\nability_id\x18\x01 \x01(\x05\x12\x16\n\x0erequires_point\x18\x02 \x01(\x08"X\n\tImageData\x12\x16\n\x0ebits_per_pixel\x18\x01 \x01(\x05\x12%\n\x04size\x18\x02 \x01(\x0b2\x17.SC2APIProtocol.Size2DI\x12\x0c\n\x04data\x18\x03 \x01(\x0c"\x1e\n\x06PointI\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05"T\n\nRectangleI\x12"\n\x02p0\x18\x01 \x01(\x0b2\x16.SC2APIProtocol.PointI\x12"\n\x02p1\x18\x02 \x01(\x0b2\x16.SC2APIProtocol.PointI"\x1f\n\x07Point2D\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02"(\n\x05Point\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02"\x1f\n\x07Size2DI\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05*A\n\x04Race\x12\n\n\x06NoRace\x10\x00\x12\n\n\x06Terran\x10\x01\x12\x08\n\x04Zerg\x10\x02\x12\x0b\n\x07Protoss\x10\x03\x12\n\n\x06Random\x10\x04')}));
export var _RACE = _descriptor.EnumDescriptor (__kwargtrans__ ({py_name: 'Race', full_name: 'SC2APIProtocol.Race', filename: null, file: DESCRIPTOR, py_values: [_descriptor.EnumValueDescriptor (__kwargtrans__ ({py_name: 'NoRace', index: 0, number: 0, options: null, py_metatype: null})), _descriptor.EnumValueDescriptor (__kwargtrans__ ({py_name: 'Terran', index: 1, number: 1, options: null, py_metatype: null})), _descriptor.EnumValueDescriptor (__kwargtrans__ ({py_name: 'Zerg', index: 2, number: 2, options: null, py_metatype: null})), _descriptor.EnumValueDescriptor (__kwargtrans__ ({py_name: 'Protoss', index: 3, number: 3, options: null, py_metatype: null})), _descriptor.EnumValueDescriptor (__kwargtrans__ ({py_name: 'Random', index: 4, number: 4, options: null, py_metatype: null}))], containing_type: null, options: null, serialized_start: 429, serialized_end: 494}));
_sym_db.RegisterEnumDescriptor (_RACE);
export var Race = enum_type_wrapper.EnumTypeWrapper (_RACE);
export var NoRace = 0;
export var Terran = 1;
export var Zerg = 2;
export var Protoss = 3;
export var Random = 4;
export var _AVAILABLEABILITY = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'AvailableAbility', full_name: 'SC2APIProtocol.AvailableAbility', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'ability_id', full_name: 'SC2APIProtocol.AvailableAbility.ability_id', index: 0, number: 1, py_metatype: 5, cpp_type: 1, label: 1, has_default_value: false, default_value: 0, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'requires_point', full_name: 'SC2APIProtocol.AvailableAbility.requires_point', index: 1, number: 2, py_metatype: 8, cpp_type: 7, label: 1, has_default_value: false, default_value: false, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 49, serialized_end: 111}));
export var _IMAGEDATA = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'ImageData', full_name: 'SC2APIProtocol.ImageData', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'bits_per_pixel', full_name: 'SC2APIProtocol.ImageData.bits_per_pixel', index: 0, number: 1, py_metatype: 5, cpp_type: 1, label: 1, has_default_value: false, default_value: 0, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'size', full_name: 'SC2APIProtocol.ImageData.size', index: 1, number: 2, py_metatype: 11, cpp_type: 10, label: 1, has_default_value: false, default_value: null, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'data', full_name: 'SC2APIProtocol.ImageData.data', index: 2, number: 3, py_metatype: 12, cpp_type: 9, label: 1, has_default_value: false, default_value: _b (''), message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 113, serialized_end: 201}));
export var _POINTI = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'PointI', full_name: 'SC2APIProtocol.PointI', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'x', full_name: 'SC2APIProtocol.PointI.x', index: 0, number: 1, py_metatype: 5, cpp_type: 1, label: 1, has_default_value: false, default_value: 0, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'y', full_name: 'SC2APIProtocol.PointI.y', index: 1, number: 2, py_metatype: 5, cpp_type: 1, label: 1, has_default_value: false, default_value: 0, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 203, serialized_end: 233}));
export var _RECTANGLEI = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'RectangleI', full_name: 'SC2APIProtocol.RectangleI', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'p0', full_name: 'SC2APIProtocol.RectangleI.p0', index: 0, number: 1, py_metatype: 11, cpp_type: 10, label: 1, has_default_value: false, default_value: null, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'p1', full_name: 'SC2APIProtocol.RectangleI.p1', index: 1, number: 2, py_metatype: 11, cpp_type: 10, label: 1, has_default_value: false, default_value: null, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 235, serialized_end: 319}));
export var _POINT2D = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'Point2D', full_name: 'SC2APIProtocol.Point2D', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'x', full_name: 'SC2APIProtocol.Point2D.x', index: 0, number: 1, py_metatype: 2, cpp_type: 6, label: 1, has_default_value: false, default_value: float (0), message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'y', full_name: 'SC2APIProtocol.Point2D.y', index: 1, number: 2, py_metatype: 2, cpp_type: 6, label: 1, has_default_value: false, default_value: float (0), message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 321, serialized_end: 352}));
export var _POINT = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'Point', full_name: 'SC2APIProtocol.Point', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'x', full_name: 'SC2APIProtocol.Point.x', index: 0, number: 1, py_metatype: 2, cpp_type: 6, label: 1, has_default_value: false, default_value: float (0), message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'y', full_name: 'SC2APIProtocol.Point.y', index: 1, number: 2, py_metatype: 2, cpp_type: 6, label: 1, has_default_value: false, default_value: float (0), message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'z', full_name: 'SC2APIProtocol.Point.z', index: 2, number: 3, py_metatype: 2, cpp_type: 6, label: 1, has_default_value: false, default_value: float (0), message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 354, serialized_end: 394}));
export var _SIZE2DI = _descriptor.Descriptor (__kwargtrans__ ({py_name: 'Size2DI', full_name: 'SC2APIProtocol.Size2DI', filename: null, file: DESCRIPTOR, containing_type: null, fields: [_descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'x', full_name: 'SC2APIProtocol.Size2DI.x', index: 0, number: 1, py_metatype: 5, cpp_type: 1, label: 1, has_default_value: false, default_value: 0, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null})), _descriptor.FieldDescriptor (__kwargtrans__ ({py_name: 'y', full_name: 'SC2APIProtocol.Size2DI.y', index: 1, number: 2, py_metatype: 5, cpp_type: 1, label: 1, has_default_value: false, default_value: 0, message_type: null, enum_type: null, containing_type: null, is_extension: false, extension_scope: null, options: null}))], extensions: [], nested_types: [], enum_types: [], options: null, is_extendable: false, syntax: 'proto2', extension_ranges: [], oneofs: [], serialized_start: 396, serialized_end: 427}));
_IMAGEDATA.fields_by_name ['size'].message_type = _SIZE2DI;
_RECTANGLEI.fields_by_name ['p0'].message_type = _POINTI;
_RECTANGLEI.fields_by_name ['p1'].message_type = _POINTI;
DESCRIPTOR.message_types_by_name ['AvailableAbility'] = _AVAILABLEABILITY;
DESCRIPTOR.message_types_by_name ['ImageData'] = _IMAGEDATA;
DESCRIPTOR.message_types_by_name ['PointI'] = _POINTI;
DESCRIPTOR.message_types_by_name ['RectangleI'] = _RECTANGLEI;
DESCRIPTOR.message_types_by_name ['Point2D'] = _POINT2D;
DESCRIPTOR.message_types_by_name ['Point'] = _POINT;
DESCRIPTOR.message_types_by_name ['Size2DI'] = _SIZE2DI;
DESCRIPTOR.enum_types_by_name ['Race'] = _RACE;
_sym_db.RegisterFileDescriptor (DESCRIPTOR);
export var AvailableAbility = _reflection.GeneratedProtocolMessageType ('AvailableAbility', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _AVAILABLEABILITY, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (AvailableAbility);
export var ImageData = _reflection.GeneratedProtocolMessageType ('ImageData', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _IMAGEDATA, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (ImageData);
export var PointI = _reflection.GeneratedProtocolMessageType ('PointI', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _POINTI, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (PointI);
export var RectangleI = _reflection.GeneratedProtocolMessageType ('RectangleI', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _RECTANGLEI, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (RectangleI);
export var Point2D = _reflection.GeneratedProtocolMessageType ('Point2D', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _POINT2D, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (Point2D);
export var Point = _reflection.GeneratedProtocolMessageType ('Point', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _POINT, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (Point);
export var Size2DI = _reflection.GeneratedProtocolMessageType ('Size2DI', tuple ([_message.Message]), dict (__kwargtrans__ ({DESCRIPTOR: _SIZE2DI, __module__: 's2clientprotocol.common_pb2'})));
_sym_db.RegisterMessage (Size2DI);

//# sourceMappingURL=s2clientprotocol.common_pb2.map